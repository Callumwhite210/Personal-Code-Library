{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Final Project\\\\Personal-Code-Library\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Final Project\\\\Personal-Code-Library\\\\client\\\\src\\\\components\\\\PostsList\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport { ListItem, List } from \"../List\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_POST, UPDATE_POSTS, LOADING } from \"../../utils/actions\";\nimport API from \"../../utils/API\";\n\nfunction PostsList() {\n  const _useStoreContext = useStoreContext(),\n        _useStoreContext2 = _slicedToArray(_useStoreContext, 2),\n        state = _useStoreContext2[0],\n        dispatch = _useStoreContext2[1]; //Function removes post by ID then calls to API.js\n\n\n  const removePost = id => {\n    API.deletePost(id).then(() => {\n      dispatch({\n        type: REMOVE_POST,\n        _id: id\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const getPosts = () => {\n    dispatch({\n      type: LOADING\n    });\n    API.getPosts().then(results => {\n      dispatch({\n        type: UPDATE_POSTS,\n        posts: results.data\n      });\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"View All Posts\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-5 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Click on a post to view\"), state.posts.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, state.posts.map(post => /*#__PURE__*/React.createElement(ListItem, {\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts/\" + post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, post.title, \" by \", post.author)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \" \", post.body, \" \"), /*#__PURE__*/React.createElement(DeleteBtn, {\n    onClick: () => removePost(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"You haven't added any posts yet!\"));\n}\n\nexport default PostsList;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Final Project/Personal-Code-Library/client/src/components/PostsList/index.js"],"names":["React","useEffect","ListItem","List","DeleteBtn","Link","useStoreContext","REMOVE_POST","UPDATE_POSTS","LOADING","API","PostsList","state","dispatch","removePost","id","deletePost","then","type","_id","catch","err","console","log","getPosts","results","posts","data","length","map","post","title","author","body"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,SAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,OAApC,QAAmD,qBAAnD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAASC,SAAT,GAAqB;AAAA,2BACOL,eAAe,EADtB;AAAA;AAAA,QACZM,KADY;AAAA,QACLC,QADK,yBAGnB;;;AACA,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACvBL,IAAAA,GAAG,CAACM,UAAJ,CAAeD,EAAf,EACGE,IADH,CACQ,MAAM;AACVJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEX,WADC;AAEPY,QAAAA,GAAG,EAAEJ;AAFE,OAAD,CAAR;AAID,KANH,EAOGK,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GATD;;AAWA,QAAMG,QAAQ,GAAG,MAAM;AACrBX,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAC,IAAAA,GAAG,CAACc,QAAJ,GACGP,IADH,CACQQ,OAAO,IAAI;AACfZ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEV,YADC;AAEPkB,QAAAA,KAAK,EAAED,OAAO,CAACE;AAFR,OAAD,CAAR;AAID,KANH,EAOGP,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GAVD;;AAYApB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAGGZ,KAAK,CAACc,KAAN,CAAYE,MAAZ,gBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACc,KAAN,CAAYG,GAAZ,CAAgBC,IAAI,iBACnB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACX,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,YAAYW,IAAI,CAACX,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,IAAI,CAACC,KADR,UACmBD,IAAI,CAACE,MADxB,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,IAAI,CAACG,IAAV,MANF,eAOE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAMnB,UAAU,CAACgB,IAAI,CAACX,GAAN,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADD,CADH,CADD,gBAeC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAlBJ,CADF;AAuBD;;AAED,eAAeR,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ListItem, List } from \"../List\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_POST, UPDATE_POSTS, LOADING } from \"../../utils/actions\";\nimport API from \"../../utils/API\";\n\nfunction PostsList() {\n  const [state, dispatch] = useStoreContext();\n\n  //Function removes post by ID then calls to API.js\n  const removePost = id => {\n    API.deletePost(id)\n      .then(() => {\n        dispatch({\n          type: REMOVE_POST,\n          _id: id\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  const getPosts = () => {\n    dispatch({ type: LOADING });\n    API.getPosts()\n      .then(results => {\n        dispatch({\n          type: UPDATE_POSTS,\n          posts: results.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div>\n      <h1>View All Posts</h1>\n      <h3 className=\"mb-5 mt-5\">Click on a post to view</h3>\n      {state.posts.length ? (\n        <List>\n          {state.posts.map(post => (\n            <ListItem key={post._id}>\n              <Link to={\"/posts/\" + post._id}>\n                <strong>\n                  {post.title} by {post.author}\n                </strong>                \n              </Link>\n              <p> {post.body} </p>\n              <DeleteBtn onClick={() => removePost(post._id)} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <h3>You haven't added any posts yet!</h3>\n      )}\n    </div>\n  );\n}\n\nexport default PostsList;\n"]},"metadata":{},"sourceType":"module"}